
    " " syntastic{{{
    "     Plugin 'vim-syntastic/syntastic'
    "     " let g:syntastic_cpp_compiler = 'clang++'
    "     " let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libc++'
    "     let g:syntastic_error_symbol='>>'
    "     let g:syntastic_warning_symbol='>'
    "     " 打开文件时如果有错误和警告会显示
    "     let g:syntastic_check_on_open=1
    "     let g:syntastic_check_on_wq=0
    "     " 高亮显示
    "     let g:syntastic_enable_highlighting=1
    "     let g:syntastic_python_checkers=['pyflakes'] " 使用pyflakes,速度比pylint快

    "     " javascript语法检测
    "     " let g:syntastic_javascript_checkers = ['eslint']
    "     " let g:syntastic_javascript_checkers = ['jsl', 'jshint', 'eslint']
    "     let g:syntastic_javascript_eslint_exec = 'eslint_d'

    "     " html语法检测
    "     " let g:syntastic_html_checkers=['eslint_d', 'tidy', 'jshint']
    "     let g:syntastic_html_checkers=['eslint']

    "     " 修改高亮的背景色, 适应主题
    "     highlight SyntasticErrorSign guifg=white guibg=black

    "     " to see error location list
    "     " let g:syntastic_always_populate_loc_list = 0
    "     " let g:syntastic_auto_loc_list = 0

    "     let g:syntastic_loc_list_height = 5
    "     function! ToggleErrors()
    "         let old_last_winnr = winnr('$')
    "         lclose
    "         if old_last_winnr == winnr('$')
    "             " Nothing was closed, open syntastic error location panel
    "             Errors
    "         endif
    "     endfunction
    "     nnoremap <Leader>s :call ToggleErrors()<cr>

    " " }}}
